plot.spec.from.df(.) +
labs(x='Wavelength (nm)',y=expression(Rrs~(sr^-1))) +
theme_bw() +
theme(legend.position='none', text=element_text(size=18))
set.seed(54321)
sample_n(imdf[,c(-1,-2)],50) %>%
plot.spec.from.df(.) +
labs(x='Wavelength (nm)',y=expression(Rrs~(sr^-1))) +
theme_bw() +
theme(legend.position='none', text=element_text(size=18))
help(OLCI_TH)
wavelength.default
generate_param <- function(wl){
w <- (wavelength.default %in% wl)
wavelength <- wavelength.default[w]
Rrs_clusters <- Rrs_clusters.default[,w]
# generate the required res
res <- list()
res$FD$wv <- wavelength
res$K <- nrow(Rrs_clusters)
res$res.FCM <- list(v=Rrs_clusters,m=1.36)
return(res)
}
res <- generate_param(c(413,443,490,510,560,620,665,674,709,754,865,885))
im_result <- apply.to.image(input=imdf, res=res, title.name="Test_image", Chla_est=T,
output_resultpng=T, output_image=F, output_imRrs.n=F)
im_result <- apply.to.image(input=OLCI_TH, res=res, title.name="Test_image", Chla_est=T,
output_resultpng=T, output_image=F, output_imRrs.n=F)
im_result <- apply.to.image(input=OLCI_TH, res=res, title.name="Test_image", Chla_est=T,
output_resultpng=F, output_image=F, output_imRrs.n=F)
im_result <- apply.to.image(input=OLCI_TH, res=res, title.name="Test_image",
Chla_est=T, output_image=F)
im_result
summary(im_result)
devtools::build_vignettes()
AeronetOC2019
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
knitr::opts_chunk$set(collapse = TRUE, comment = "#>",
fig.align='center')
rm(list=ls())
library(FCMm)
library(tidyverse)
data("WaterSpec35")
data("Bi_clusters")
Rrs <- WaterSpec35[,3:17]
qplot(data=WaterSpec35, x=Chla, geom='density', xlab='The raw Chla')
qplot(data=WaterSpec35, x=Chla, geom='density', log='x', xlab='Log10 transformed Chla')
p.spec <- plot.spec.from.df(Rrs) +
labs(x='Wavelength (nm)',y=expression(Rrs~(sr^-1))) +
theme_bw() +
theme(legend.position='none', text=element_text(size=18))
print(p.spec)
result <- apply_FCM_m(Rrs=Rrs, option.plot=TRUE)
summary(result)
result$p.group
dt_Chla <- FCM_m_Chla_estimation(Rrs=data.frame(Rrs665=Rrs$`665`,
Rrs709=Rrs$`708.75`,
Rrs754=Rrs$`753.75`),
U=result$u)
dt_Chla$cluster <- result$cluster %>% as.character
dt_Chla$Chla_true <- WaterSpec35$Chla
options(scipen=10000)
subset(dt_Chla, select=c('cluster','Chla_true','BR','TBA','C6','conc.Blend')) %>%
reshape2::melt(., id=c('cluster','Chla_true')) %>%
ggplot(data=.) +
geom_point(aes(x=Chla_true,y=value,group=cluster,color=cluster),
alpha=0.8, size=4) +
scale_x_log10(limits=c(1,800)) +
scale_y_log10(limits=c(1,800)) +
scale_color_manual(values=heatmaply::RdYlBu(result$K)) +
labs(x='True value of Chla concentration (ug/L)',
y='Estimated value of Chla concentration (ug/L)',
color='Cluster') +
geom_abline(intercept=0, slope=1, linetype=2) +
facet_wrap(~variable, nrow=2) +
theme_bw() +
theme(axis.text.x.bottom = element_text(hjust=1))
MAPEs <- NULL
i <- 1
for(model in c('BR','TBA','C6','conc.Blend')){
MAPEs[i] <- cal.metrics(x=dt_Chla$Chla_true %>% log10,
y=dt_Chla[,model]  %>% log10,
name='MAPE')
names(MAPEs)[i] <- model
i <- i + 1
}
print(MAPEs)
MAEs <- NULL
i <- 1
for(model in c('BR','TBA','C6','conc.Blend')){
MAEs[i] <- cal.metrics(x=dt_Chla$Chla_true,
y=dt_Chla[,model],
name='MAE2')
names(MAEs)[i] <- model
i <- i + 1
}
print(MAEs)
print(MAEs)
roxygen2::roxygenise()
library(FCMm)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(FCMm)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
names(roxygen2:::default_tags())
names(roxygen2:::default_tags())
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
plot.spec <- function(res, show.stand=FALSE, HABc=NULL){
p.all.spec <- .plot.all.spec(res,show.stand=show.stand)
p.cluster.spec <- .plot.cluster.spec(res,show.stand=show.stand)
p.group.spec.1 <- .plot.group.spec(res,show.stand=show.stand,mem.crisp=T, HABc=HABc)
p.group.spec.2 <- .plot.group.spec(res,show.stand=show.stand,mem.crisp=F, HABc=HABc)
result = list()
result$p.all.spec <- p.all.spec
result$p.cluster.spec <- p.cluster.spec
result$p.group.spec.1 <- p.group.spec.1
result$p.group.spec.2 <- p.group.spec.2
result$res <- res
result$show.stand = show.stand
return(result)
}
roxygen2::roxygenise()
plot.spec <- function(res, show.stand=FALSE, HABc=NULL){
p.all.spec <- .plot.all.spec(res,show.stand=show.stand)
p.cluster.spec <- .plot.cluster.spec(res,show.stand=show.stand)
p.group.spec.1 <- .plot.group.spec(res,show.stand=show.stand,mem.crisp=T, HABc=HABc)
p.group.spec.2 <- .plot.group.spec(res,show.stand=show.stand,mem.crisp=F, HABc=HABc)
result = list()
result$p.all.spec <- p.all.spec
result$p.cluster.spec <- p.cluster.spec
result$p.group.spec.1 <- p.group.spec.1
result$p.group.spec.2 <- p.group.spec.2
result$res <- res
result$show.stand = show.stand
return(result)
}
library(roxygen2)
is_s3_generic(plot.spec())
is_s3_generic(plot.spec)
is_s3_generic(name=plot.spec)
is_s3_generic(name='plot.spec')
is_s3_method(name='plot.spec')
is_s3_method(name='plot.spec()')
is_s3_method(name='plot.spec()')
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
roxygenise()
?devtools
library(devtools)
build_vignettes()
build_manual()
tools::texi2pdf()
build_readme()
build_readme(path='.', quite=F)
build_site()
build_site()
build_site(quiet=F)
library(devtools)
build_readme()
build_vignettes()
build()
system(R)
load("~/GitHub/FCMm/data/AeronetOC2019.rda")
save(AeronetOC2019,file='/data/AeronetOC2019_.rda', compress='xz')
save(AeronetOC2019,file='AeronetOC2019_.rda', compress='xz')
load("~/GitHub/FCMm/data/OLCI_TH.rda")
setwd("~/GitHub/FCMm/data")
load("~/GitHub/FCMm/data/AeronetOC2019_.rda")
load("~/GitHub/FCMm/data/Bi_clusters.rda")
load("~/GitHub/FCMm/data/OLCI_TH.rda")
save(OLCI_TH, file='OLCI_TH_.rda')
save(OLCI_TH, file='OLCI_TH_.rda', compress='xz')
document()
document()
build_vignettes()
check_rhub()
check_rhub()
remove.packages("FCMm", lib="~/R/win-library/3.6")
devtools::install_github("bishun945/FCMm")
library(FCMmm)
library(FCMm)
help(FCM.new)
help(FuzzifierDetermination)
library(FCMm)
devtools::install_github("bishun945/FCMm")
devtools::install_github("bishun945/FCMm", build_vignettes=TRUE)
devtools::install_github("bishun945/FCMm", build_vignettes=TRUE, force=TRUE)
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "60%",
fig.align = "center"
)
options(tibble.print_min=5, tibble.print_max=5)
# Load testing data
library(FCMm)
# Load testing data
library(FCMm)
library(ggplot2)
data("WaterSpec35")
data("Bi_clusters")
Rrs <- WaterSpec35[,3:17]
# Applying FCMm
result <- apply_FCM_m(Rrs=Rrs, option.plot=TRUE)
plot(result$p.group)
result$p.group + facet_warp(~cluster)
library(ggplot2)
result$p.group + facet_warp(~cluster)
result$p.group + facet_wrap(~cluster)
library(devtools)
document()
file.choose()
library(tidyverse)
fn <- "C:\\Users\\Shun Bi\\Documents\\MATLAB\\SRF.xlsx"
SRF <- excel_sheets(fn)
library(readxl)
SRF <- excel_sheets(fn)
excel_sheets(fn)
SRF <- list()
tmp <- read_excel(fn, sheet=sheet)
sheet <- sheets[1]
sheets <- excel_sheets(fn)
sheet <- sheets[1]
tmp <- read_excel(fn, sheet=sheet)
tmp
SRF_LIST <- list()
rm(SRF
)
SRF[[sheet]] <- tmp
SRF_LIST[[sheet]] <- tmp
build_readme()
build_readme()
devtools::build_readme()
library(devtools)
document()
document(".")
document("..")
install.packages('devtools')
install.packages('devtools')
install.packages('devtools')
curl::curl('wwww.baidu.com')
install.packages('devtools')
install.packages("devtools")
library(FCMm)
rm(list=ls())
library(FCMm)
library(tidyverse)
library(magrittr)
# load and clean data
data("Nechad2015")
Nechad2015 %<>% subset(., X620 < 0.1 & X412.5 > 1e-04)
names(Nechad2015)[12] <- 'Chla'
names(Nechad2015)[13] <- 'TSM'
Nechad2015$Chla[Nechad2015$Chla >= 999] <- NA
Nechad2015$TSM[Nechad2015$TSM >= 999] <- NA
w <- Nechad2015 %>% names %>%
str_extract(.,pattern="\\d") %>%
is.na %>% {!.}
wv <- w %>% names(Nechad2015)[.] %>%
gsub('X','',.) %>% as.numeric
x <- w %>% Nechad2015[,.]
names(x) <- wv
rm(w)
plot_spec_from_df(x) +
labs(x='Wavelength (nm)',y=expression(Rrs~(sr^-1))) +
theme_bw() +
theme(legend.position='none', text=element_text(size=18))
FD <- FuzzifierDetermination(x, wv, stand=F)
(FD$m.used)
nb <- 13
set.seed(54321)
result <- FCM.new(FD, nb, fast.mode = T)
data.frame(stname=seq(1,nrow(x)),
cluster=result$res.FCM$cluster %>% as.character()) %>%
cbind(., FD$x) %>%
reshape2::melt(., id=c('stname','cluster')) %>% .level_to_variable() %>%
ggplot(.) +
geom_line(aes(x=variable,y=value,group=stname,color=cluster)) +
facet_wrap(~cluster, scales='free_y')
data.frame(stname=seq(1,nrow(x)),
cluster=result$res.FCM$cluster %>% as.character()) %>%
cbind(., FD$x.stand) %>%
reshape2::melt(., id=c('stname','cluster')) %>% .level_to_variable() %>%
ggplot(.) +
geom_line(aes(x=variable,y=value,group=stname,color=cluster)) +
facet_wrap(~cluster, scales='free_y')
p.list <- plot_spec(result)
p.list$p.cluster.spec
Nechad2015$cluster <- result$res.FCM$cluster %>% as.character
tmp <- data.frame(cluster=Nechad2015$cluster,Chla=Nechad2015$Chla)
tmp$Chla[tmp$Chla >= 999] <- NA
tmp %<>% na.omit()
tmp$cluster <- reorder(tmp$cluster, tmp$Chla, mean)
ggplot(tmp,aes(x=cluster,y=Chla,fill=cluster)) +
geom_boxplot() +
scale_y_log10()
data.frame(result$res.FCM$u) %>% setNames(., sprintf("M%s",1:nb)) %>%
cbind(Nechad2015, .) -> dt
dt <- dt[{!is.na(dt$Chla)},]
dt$Chla_OC4 <- OC4_v6(Rrs443=dt$X442.5,Rrs490=dt$X490,
Rrs510=dt$X510,Rrs555=dt$X560)
dt$Chla_BR_Git11 <- BR_Gil10(Rrs709=dt$X708.75, Rrs665=dt$X665)
assessment <- Assessment_via_cluster(pred=dt[,c('Chla_OC4','Chla_BR_Git11')],
meas=dt$Chla,
memb=dt[,sprintf('M%s',1:nb)])
assessment
options(digits=1000)
options(digits=4)
options(digits=4)
data.frame(result$res.FCM$u) %>% setNames(., sprintf("M%s",1:nb)) %>%
cbind(Nechad2015, .) -> dt
dt <- dt[{!is.na(dt$Chla)},]
dt$Chla_OC4 <- OC4_v6(Rrs443=dt$X442.5,Rrs490=dt$X490,
Rrs510=dt$X510,Rrs555=dt$X560)
dt$Chla_BR_Git11 <- BR_Gil10(Rrs709=dt$X708.75, Rrs665=dt$X665)
assessment <- Assessment_via_cluster(pred=dt[,c('Chla_OC4','Chla_BR_Git11')],
meas=dt$Chla,
memb=dt[,sprintf('M%s',1:nb)])
assessment
options(scipen=1000)
options(scipen=1000)
data.frame(result$res.FCM$u) %>% setNames(., sprintf("M%s",1:nb)) %>%
cbind(Nechad2015, .) -> dt
dt <- dt[{!is.na(dt$Chla)},]
dt$Chla_OC4 <- OC4_v6(Rrs443=dt$X442.5,Rrs490=dt$X490,
Rrs510=dt$X510,Rrs555=dt$X560)
dt$Chla_BR_Git11 <- BR_Gil10(Rrs709=dt$X708.75, Rrs665=dt$X665)
assessment <- Assessment_via_cluster(pred=dt[,c('Chla_OC4','Chla_BR_Git11')],
meas=dt$Chla,
memb=dt[,sprintf('M%s',1:nb)])
assessment
#' @title OC4_v6
#' @export
OC4_v6 <- function(Rrs443, Rrs490, Rrs510, Rrs555){
X <- apply(log10(cbind(Rrs443,Rrs490,Rrs510)),1,max)/log10(Rrs555)
return(10^(0.327-2.994*X+2.721*X^2-1.225*X^3-0.568*X^4))
}
dt$Chla_OC4 <- OC4_v6(Rrs443=dt$X442.5,Rrs490=dt$X490,
Rrs510=dt$X510,Rrs555=dt$X560)
View(dt)
Rrs443=dt$X442.5
Rrs490=dt$X490
Rrs510=dt$X510
Rrs555=dt$X560
X <- apply(log10(cbind(Rrs443,Rrs490,Rrs510)),1,max)/log10(Rrs555)
10^(0.327-2.994*X+2.721*X^2-1.225*X^3-0.568*X^4)
0.327-2.994*X+2.721*X^2-1.225*X^3-0.568*X^4
library(devtools)
document()
dt$Chla_OC4 <- OC4_v6(Rrs443=dt$X442.5,
Rrs490=dt$X490,
Rrs510=dt$X510,
Rrs555=dt$X560)
View(dt)
install(build_vignettes = F))
install(build_vignettes = F)
dt$Chla_OC4 <- OC4_v6(Rrs443=dt$X442.5,
Rrs490=dt$X490,
Rrs510=dt$X510,
Rrs555=dt$X560)
options(scipen=1000)
data.frame(result$res.FCM$u %>% round(4)) %>% setNames(., sprintf("M%s",1:nb)) %>%
cbind(Nechad2015, .) -> dt
dt <- dt[{!is.na(dt$Chla)},]
dt$Chla_OC4 <- OC4_v6(Rrs443=dt$X442.5,
Rrs490=dt$X490,
Rrs510=dt$X510,
Rrs555=dt$X560)
dt$Chla_BR_Git11 <- BR_Gil10(Rrs709=dt$X708.75,
Rrs665=dt$X665)
assessment <- Assessment_via_cluster(pred=dt[,c('Chla_OC4','Chla_BR_Git11')],
meas=dt$Chla,
memb=dt[,sprintf('M%s',1:nb)])
assessment
document()
dt$Chla_OC4 <- OC4_v6(Rrs443=dt$X442.5,
Rrs490=dt$X490,
Rrs510=dt$X510,
Rrs555=dt$X560)
OC4_v6(Rrs443=dt$X442.5,
Rrs490=dt$X490,
Rrs510=dt$X510,
OC4_v6(Rrs443=dt$X442.5,
Rrs490=dt$X490,
Rrs510=dt$X510,
Rrs555=dt$X560)
)))
OC4_v6(Rrs443=dt$X442.5,
Rrs490=dt$X490,
Rrs510=dt$X510,
Rrs555=dt$X560)
data("Valente2019")
View(Valente2019)
load("~/Documents/GitHub/FCMm/data/AeronetOC2019.rda")
View(AeronetOC2019)
names(AeornetOC2019)
names(AeronetOC2019)
Rrs <- AeronetOC2019[,2:9]
names(Rrs) <- c(410,440,490,530,550,667,869,1020)
sample_n(Rrs, 1000) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
sample_n(Rrs, 100) %>% plot_spec_from_df()
wv <- c(410,440,490,530,550,667,869,1020)
names(Rrs) <- wv
?FuzzifierDetermination
FD <- FuzzifierDetermination(Rrs,wv,stand=F)
sample_n(Rrs, 500) %>%
FuzzifierDetermination(Rrs,wv,stand=F) -> FD
sample_n(Rrs, 500) %>%
FuzzifierDetermination(Rrs,wv,stand=F)
sample_n(Rrs, 500) %>%
FuzzifierDetermination(Rrs,wv,stand=F)
sample_n(Rrs, 500) %>%
FuzzifierDetermination(Rrs,wv,stand=F)
sample_n(Rrs, 500)
sample_n(Rrs, 1000) %>%
FuzzifierDetermination(Rrs, wv, stand=F)
sample_n(Rrs, 2000) %>%
FuzzifierDetermination(Rrs, wv, stand=F)
sample_n(Rrs, 3000) %>%
FuzzifierDetermination(Rrs, wv, stand=F)
Rrs_sub <- sample_n(Rrs, 3000)
FD <- FuzzifierDetermination(Rrs, wv, stand=F)
FD <- sample_n(Rrs, 500) %>% FuzzifierDetermination(., wv, stand=F)
FD$m.used
for(i in 1:100){
FD <- sample_n(Rrs, 500) %>% FuzzifierDetermination(., wv, stand=F)
print(FD$m.used)
}
names(AeronetOC2019)
Rrs <- AeronetOC2019[,2:9]
wv <- c(410,440,490,530,550,667,869,1020)
names(Rrs) <- wv
for(i in 1:100){
FD <- sample_n(Rrs, 100) %>% FuzzifierDetermination(., wv, stand=F)
print(FD$m.used)
}
mused <- NULL
for(i in 1:50){
FD <- sample_n(Rrs, 100) %>% FuzzifierDetermination(., wv, stand=F)
mused[i] <- FD$m.used
}
hist(mused)
mused <- NULL
for(i in 1:50){
FD <- sample_n(Rrs, 500) %>% FuzzifierDetermination(., wv, stand=F)
mused[i] <- FD$m.used
}
hist(mused)
